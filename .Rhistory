credit_data <- read.csv(file = 'cs-training.csv')
setwd("C:/Users/Strahinja/Desktop/books_Germany/R_Project/R_Project")
credit_data <- read.csv(file = 'cs-training.csv')
credit_data_dropped_number = subset(credit_data, select = -c(X))
summary(credit_data_dropped_number)
summary(credit_data_dropped_number$NumberOfTimes90DaysLate)
summary(credit_data_dropped_number$NumberOfTime30.59DaysPastDueNotWorse)
summary(credit_data_dropped_number$NumberOfTime60.89DaysPastDueNotWorse)
a = data.frame(numofdayslate = "30-59", value = c(credit_data_dropped_number$NumberOfTime30.59DaysPastDueNotWorse))
b = data.frame(numofdayslate = "60-89", value = c(credit_data_dropped_number$NumberOfTime60.89DaysPastDueNotWorse))
c = data.frame(numofdayslate = "90", value = c(credit_data_dropped_number$NumberOfTimes90DaysLate))
plot.data = rbind(a,b,c)
ggplot(plot.data, aes(x=numofdayslate, y=value, fill=numofdayslate))+
geom_boxplot()+
theme(panel.background = element_rect(fill = "white"))+
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"))
# install.packages("broom", type="binary")
# install.packages("ggplot2")
# install.packages("Hmisc")
# install.packages("e1071")
# install.packages("blorr")
library("blorr")
library("broom")
library("ggplot2")
library("Hmisc")
library("e1071")
library("survival")
# install.packages("rms")
library("rms")
# install.packages("survival")
# install.packages("reprex")
library("tidyverse")
library("reprex")
# install.packages("dplyr")
library("dplyr")
library(tidyverse)
library("dplyr")
library(caret)
library(ggplot2)
library(lattice)
library(ROCR)
library(pROC)
ggplot(plot.data, aes(x=numofdayslate, y=value, fill=numofdayslate))+
geom_boxplot()+
theme(panel.background = element_rect(fill = "white"))+
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"))
credit_data_cleaned_days_past<-credit_data_dropped_number[!(credit_data_dropped_number$NumberOfTime60.89DaysPastDueNotWorse > 95 | credit_data_dropped_number$NumberOfTime30.59DaysPastDueNotWorse > 95 | credit_data_dropped_number$NumberOfTimes90DaysLate > 95),]
summary(credit_data_cleaned_days_past$SeriousDlqin2yrs)
d = data.frame(feature = "RevolvingUtilizationOfUnsecuredLines", value = c(credit_data_cleaned_days_past$RevolvingUtilizationOfUnsecuredLines))
ggplot(d, aes(x=feature, y=value, fill=feature)) +
geom_boxplot()+
theme(panel.background = element_rect(fill = "white"))+
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"))
length(which(credit_data_cleaned_days_past$SeriousDlqin2yrs == 1 & credit_data_cleaned_days_past$RevolvingUtilizationOfUnsecuredLines > 13 ))
length(which(credit_data_cleaned_days_past$RevolvingUtilizationOfUnsecuredLines > 13 ))
credit_data_cleaned_Utilization<-subset( credit_data_cleaned_days_past, credit_data_cleaned_days_past$RevolvingUtilizationOfUnsecuredLines < 13)
credit_data_cleaned_age<-credit_data_cleaned_Utilization[!(credit_data_cleaned_Utilization$age <1),]
credit_data_cleaned_age<-credit_data_cleaned_age[!(credit_data_cleaned_age$age > 99),]
credit_data_cleaned_DebtRatio<-credit_data_cleaned_age[!(credit_data_cleaned_age$DebtRatio >3490),]
credit_data_cleaned_DebtRatio$NumberOfDependents[is.na(credit_data_cleaned_DebtRatio$NumberOfDependents)] <- 0
credit_data_cleaned_DebtRatio$MonthlyIncome[is.na(credit_data_cleaned_DebtRatio$MonthlyIncome)] <- median(credit_data_cleaned_DebtRatio$MonthlyIncome, na.rm=TRUE)
credit_data_cleaned <- credit_data_cleaned_DebtRatio
credit_data_cleaned_deskewed <- sqrt(credit_data_cleaned)
credit_data_cleaned_deskewed['IncomePerPerson'] = credit_data_cleaned_deskewed['MonthlyIncome']/(credit_data_cleaned_deskewed['NumberOfDependents']+1)
credit_data_cleaned_deskewed['MonthlyDebt'] = credit_data_cleaned_deskewed['DebtRatio']*credit_data_cleaned_deskewed['MonthlyIncome']
credit_data_cleaned_deskewed['NumOfOpenCreditLines'] = credit_data_cleaned_deskewed['NumberOfOpenCreditLinesAndLoans']-credit_data_cleaned_deskewed['NumberRealEstateLoansOrLines']
#From the correlation matrix, we saw that his feature is extremely negative correlated with couple of other ones. I'll try without this feature to see how does the heatmap look like.
credit_data_cleaned_deskewed$SeriousDlqin2yrs <- as.factor(credit_data_cleaned_deskewed$SeriousDlqin2yrs)
library(caret)
library(ggplot2)
library(lattice)
set.seed(1)
index <- createDataPartition(credit_data_cleaned_deskewed$SeriousDlqin2yrs, p=0.7, list=FALSE)
training <- credit_data_cleaned_deskewed[index,]
test<- credit_data_cleaned_deskewed[-index, ]
#We check the proportion in the training and test sets.
summary(training$SeriousDlqin2yrs)
summary(test$SeriousDlqin2yrs)
#We define cross validation with 10 folds for the following analyses
TControl <- trainControl(method="cv", number=10)
library(caret)
install.packages("caret",
repos = "http://cran.r-project.org",
dependencies = c("Depends", "Imports", "Suggests"))
library(caret)
